# Generated by Django 2.0.4 on 2018-06-23 13:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='access',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='access_level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('access', models.ManyToManyField(blank=True, to='automaximum.access')),
            ],
        ),
        migrations.CreateModel(
            name='amount_on_storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('full_num', models.CharField(blank=True, max_length=128, verbose_name='Полный номер кузова')),
                ('date1', models.DateField(default=django.utils.timezone.now, verbose_name='Дата начала выпуска')),
                ('date2', models.DateField(default=django.utils.timezone.now, verbose_name='Дата окончания выпуска')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=128)),
                ('full_name', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='cashbox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('cash', models.FloatField(default=0)),
                ('commentary', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=128)),
                ('short_description', models.TextField(blank=True, verbose_name='Краткое описание')),
                ('searchtags', models.TextField(blank=True, verbose_name='Теги для поиска')),
                ('full_name', models.CharField(blank=True, max_length=128)),
                ('useinfullname', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Категории',
                'verbose_name': 'Категорию',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='characteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('type', models.CharField(choices=[('int', 'Число'), ('choice', 'Выбор'), ('string', 'Текст')], default='int', max_length=22)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='characteristics_choices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=128, verbose_name='Значение')),
                ('characteristics', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.characteristics')),
            ],
        ),
        migrations.CreateModel(
            name='characteristics_value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(blank=True, max_length=128, verbose_name='<django.db.models.fields.related.ForeignKey>')),
                ('text', models.CharField(blank=True, max_length=128, verbose_name='<django.db.models.fields.related.ForeignKey>')),
                ('characteristics', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.characteristics')),
                ('choice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.characteristics_choices', verbose_name='<django.db.models.fields.related.ForeignKey>')),
            ],
        ),
        migrations.CreateModel(
            name='client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('adress', models.CharField(blank=True, max_length=128)),
                ('number', models.CharField(blank=True, max_length=32)),
                ('card', models.CharField(blank=True, max_length=64)),
                ('cash', models.FloatField(default=0)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='engine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Название')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('commentary', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='memory_action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('action', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата')),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='operation_money',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash', models.FloatField(default=0)),
                ('leftovers', models.FloatField(default=0)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата')),
                ('commentary', models.TextField(blank=True)),
                ('checked', models.BooleanField(default=False)),
                ('cashbox', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.cashbox')),
                ('cashbox_recieve', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cashbox_recieve', to='automaximum.cashbox')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.client')),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='operation_product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата')),
                ('commentary', models.TextField(blank=True)),
                ('cash', models.FloatField(default=0)),
                ('leftovers', models.FloatField(default=0)),
                ('state', models.IntegerField(default=0)),
                ('approved', models.BooleanField(default=False)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.client')),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='operation_product_cashbox_instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash', models.FloatField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата')),
                ('approved', models.BooleanField(default=False)),
                ('cashbox', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.cashbox')),
                ('operation_money', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.operation_money')),
                ('operation_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.operation_product')),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='operation_product_product_instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_amount', models.FloatField(blank=True, null=True)),
                ('product_price', models.FloatField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата')),
                ('approved', models.BooleanField(default=False)),
                ('operation_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.operation_product')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='part_of',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='part_of_car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.car')),
                ('part_of', models.ManyToManyField(blank=True, to='automaximum.part_of')),
            ],
        ),
        migrations.CreateModel(
            name='price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('nacenka', models.FloatField(blank=True, default=2.0)),
                ('analogue', models.ManyToManyField(blank=True, related_name='_price_analogue_+', to='automaximum.price', verbose_name='цена от которой считать')),
            ],
        ),
        migrations.CreateModel(
            name='price_value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(blank=True, null=True)),
                ('nacenka', models.FloatField(blank=True, null=True)),
                ('price', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.price')),
            ],
        ),
        migrations.CreateModel(
            name='product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('argus_name', models.CharField(blank=True, max_length=256)),
                ('argus_article', models.CharField(blank=True, max_length=128)),
                ('article', models.CharField(blank=True, max_length=256)),
                ('has_article', models.BooleanField(default=False)),
                ('full_name', models.CharField(blank=True, max_length=128)),
                ('article_alt', models.CharField(blank=True, max_length=256)),
                ('commentary', models.TextField(blank=True)),
                ('amount0', models.FloatField(blank=True, default=0, null=True)),
                ('price0', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('commentary', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='trading_product_in_basket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='automaximum.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='type_operation_money',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('minus', 'Расход'), ('plus', 'Приход'), ('minusplus', 'Перемещение')], default='minus', max_length=22)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='type_operation_product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('minus', 'Расход'), ('plus', 'Приход'), ('minusplus', 'Перемещение')], default='minus', max_length=22)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('creates', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.type_operation_money')),
                ('default_price', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.price')),
            ],
        ),
        migrations.CreateModel(
            name='user_profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('access', models.ManyToManyField(blank=True, to='automaximum.access')),
                ('access_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.access_level')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='amount',
            field=models.ManyToManyField(through='automaximum.amount_on_storage', to='automaximum.storage'),
        ),
        migrations.AddField(
            model_name='product',
            name='analogue',
            field=models.ManyToManyField(blank=True, related_name='_product_analogue_+', to='automaximum.product'),
        ),
        migrations.AddField(
            model_name='product',
            name='car',
            field=models.ManyToManyField(blank=True, to='automaximum.car'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='characteristics',
            field=models.ManyToManyField(through='automaximum.characteristics_value', to='automaximum.characteristics'),
        ),
        migrations.AddField(
            model_name='product',
            name='engine',
            field=models.ManyToManyField(blank=True, to='automaximum.engine'),
        ),
        migrations.AddField(
            model_name='product',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.manufacturer'),
        ),
        migrations.AddField(
            model_name='product',
            name='price',
            field=models.ManyToManyField(through='automaximum.price_value', to='automaximum.price'),
        ),
        migrations.AddField(
            model_name='product',
            name='used_with',
            field=models.ManyToManyField(blank=True, related_name='_product_used_with_+', to='automaximum.product'),
        ),
        migrations.AddField(
            model_name='price_value',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.product'),
        ),
        migrations.AddField(
            model_name='part_of_car',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.product'),
        ),
        migrations.AddField(
            model_name='operation_product_product_instance',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.product'),
        ),
        migrations.AddField(
            model_name='operation_product_product_instance',
            name='storage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.storage'),
        ),
        migrations.AddField(
            model_name='operation_product',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.user_profile'),
        ),
        migrations.AddField(
            model_name='operation_product',
            name='price',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.price'),
        ),
        migrations.AddField(
            model_name='operation_product',
            name='storage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.storage'),
        ),
        migrations.AddField(
            model_name='operation_product',
            name='storage_recieve',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storage_recieve', to='automaximum.storage'),
        ),
        migrations.AddField(
            model_name='operation_product',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.type_operation_product'),
        ),
        migrations.AddField(
            model_name='operation_money',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.type_operation_money'),
        ),
        migrations.AddField(
            model_name='client',
            name='price',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.price'),
        ),
        migrations.AddField(
            model_name='characteristics_value',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.product'),
        ),
        migrations.AddField(
            model_name='category',
            name='characteristics',
            field=models.ManyToManyField(blank=True, to='automaximum.characteristics'),
        ),
        migrations.AddField(
            model_name='category',
            name='characteristics_forname',
            field=models.ManyToManyField(blank=True, related_name='characteristics_forname', to='automaximum.characteristics'),
        ),
        migrations.AddField(
            model_name='category',
            name='subcategory_of',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.category'),
        ),
        migrations.AddField(
            model_name='car',
            name='engine',
            field=models.ManyToManyField(blank=True, to='automaximum.engine'),
        ),
        migrations.AddField(
            model_name='car',
            name='subcategory_of',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.car'),
        ),
        migrations.AddField(
            model_name='amount_on_storage',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.product'),
        ),
        migrations.AddField(
            model_name='amount_on_storage',
            name='storage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automaximum.storage'),
        ),
    ]
